// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace CookBook.PL.Controllers
{
    public partial class RecipeController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public RecipeController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RecipeController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteRecipe()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteRecipe);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditRecipe()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditRecipe);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddExistComposition()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddExistComposition);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddNewComposition()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddNewComposition);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public RecipeController Actions { get { return MVC.Recipe; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Recipe";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Recipe";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string ViewRecipeList = "ViewRecipeList";
            public readonly string AddRecipe = "AddRecipe";
            public readonly string DeleteRecipe = "DeleteRecipe";
            public readonly string EditRecipe = "EditRecipe";
            public readonly string AddExistComposition = "AddExistComposition";
            public readonly string AddNewComposition = "AddNewComposition";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string ViewRecipeList = "ViewRecipeList";
            public const string AddRecipe = "AddRecipe";
            public const string DeleteRecipe = "DeleteRecipe";
            public const string EditRecipe = "EditRecipe";
            public const string AddExistComposition = "AddExistComposition";
            public const string AddNewComposition = "AddNewComposition";
        }


        static readonly ActionParamsClass_AddRecipe s_params_AddRecipe = new ActionParamsClass_AddRecipe();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddRecipe AddRecipeParams { get { return s_params_AddRecipe; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddRecipe
        {
            public readonly string recipe = "recipe";
        }
        static readonly ActionParamsClass_DeleteRecipe s_params_DeleteRecipe = new ActionParamsClass_DeleteRecipe();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteRecipe DeleteRecipeParams { get { return s_params_DeleteRecipe; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteRecipe
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_EditRecipe s_params_EditRecipe = new ActionParamsClass_EditRecipe();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditRecipe EditRecipeParams { get { return s_params_EditRecipe; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditRecipe
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_AddExistComposition s_params_AddExistComposition = new ActionParamsClass_AddExistComposition();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddExistComposition AddExistCompositionParams { get { return s_params_AddExistComposition; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddExistComposition
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_AddNewComposition s_params_AddNewComposition = new ActionParamsClass_AddNewComposition();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddNewComposition AddNewCompositionParams { get { return s_params_AddNewComposition; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddNewComposition
        {
            public readonly string model = "model";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string AddComposition = "AddComposition";
                public readonly string AddRecipe = "AddRecipe";
                public readonly string Editing = "Editing";
                public readonly string Listing = "Listing";
            }
            public readonly string AddComposition = "~/Views/Recipe/AddComposition.cshtml";
            public readonly string AddRecipe = "~/Views/Recipe/AddRecipe.cshtml";
            public readonly string Editing = "~/Views/Recipe/Editing.cshtml";
            public readonly string Listing = "~/Views/Recipe/Listing.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_RecipeController : CookBook.PL.Controllers.RecipeController
    {
        public T4MVC_RecipeController() : base(Dummy.Instance) { }

        [NonAction]
        partial void ViewRecipeListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ViewRecipeList()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewRecipeList);
            ViewRecipeListOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AddRecipeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddRecipe()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddRecipe);
            AddRecipeOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AddRecipeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, CookBook.PL.Models.RecipeViewModel recipe);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddRecipe(CookBook.PL.Models.RecipeViewModel recipe)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddRecipe);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "recipe", recipe);
            AddRecipeOverride(callInfo, recipe);
            return callInfo;
        }

        [NonAction]
        partial void DeleteRecipeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteRecipe(System.Guid id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteRecipe);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteRecipeOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void EditRecipeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid id);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditRecipe(System.Guid id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditRecipe);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            EditRecipeOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void AddExistCompositionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, CookBook.PL.Models.CompositionBaseViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddExistComposition(CookBook.PL.Models.CompositionBaseViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddExistComposition);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AddExistCompositionOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void AddNewCompositionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, CookBook.PL.Models.CompositionViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddNewComposition(CookBook.PL.Models.CompositionViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddNewComposition);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AddNewCompositionOverride(callInfo, model);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
